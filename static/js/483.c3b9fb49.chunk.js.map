{"version":3,"file":"static/js/483.c3b9fb49.chunk.js","mappings":"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","sources":["webpack://metalcom/./src/pages/ProductCard/ProductCard.module.css?58d1","pages/ProductCard/ProductCard.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"ProductCard_thumb__pS5z4\",\"container\":\"ProductCard_container__hZ+ht\",\"aside\":\"ProductCard_aside__cWrh1\",\"category\":\"ProductCard_category__MEhYQ\",\"list\":\"ProductCard_list__iDfEQ\",\"cardContainer\":\"ProductCard_cardContainer__J1pd-\",\"card\":\"ProductCard_card__2vPPq\",\"item\":\"ProductCard_item__mYUcL\",\"active\":\"ProductCard_active__lBomi ProductCard_item__mYUcL\",\"img\":\"ProductCard_img__aAmZW\",\"listImg\":\"ProductCard_listImg__ICgpx\",\"itemImg\":\"ProductCard_itemImg__hEgtj\",\"card_wrapper\":\"ProductCard_card_wrapper__c-Zks\",\"features\":\"ProductCard_features__2TVlu\",\"features_item\":\"ProductCard_features_item__i9RM9\",\"card_title\":\"ProductCard_card_title__WR+X4\",\"card_size_item\":\"ProductCard_card_size_item__ivm+t\",\"card_text_base\":\"ProductCard_card_text_base__V0Hc-\",\"btn_connect\":\"ProductCard_btn_connect__a65w1\"};","import { useRef, useState, useEffect } from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Button, ContactForm, Downloader, Modal } from 'components';\n// import catalogName from 'localization/catalogName.json';\nimport icons from 'images/icons.svg';\nimport s from './ProductCard.module.css';\n\nconst ProductCard = () => {\n    const { productId } = useParams();\n    const [searchParams] = useSearchParams();\n    const [isModalShow, setIsModalShow] = useState(false);\n    const [child, setChild] = useState();\n    const mainImg = useRef(null);\n    const navigate = useNavigate();\n\n    const catalogIdx = searchParams.get('catalog');\n    const catalog = useSelector(state => state.catalogs[catalogIdx - 1]);\n    const product = catalog?.find(({ id }) => id === productId);\n\n    useEffect(() => {\n        !product && navigate('/pageNotFound');\n    });\n\n    const chooseProduct = id => {\n        navigate(`/product/${id}?catalog=${catalogIdx}`, { replace: true });\n    };\n\n    const toMain = url => {\n        mainImg.current.src = url;\n    };\n\n    const showImg = () => {\n        setChild(<img src={mainImg.current.src} alt=\"\" />);\n        toggleModal();\n    };\n\n    const showContact = () => {\n        setChild(<ContactForm />);\n        toggleModal();\n    };\n\n    const toggleModal = () => {\n        setIsModalShow(state => !state);\n    };\n\n    console.log('product: ', product); ///////////////\n    return (\n        product && (\n            <div className=\"sectionWidth\">\n                <div className={s.thumb}>\n                    <Button text=\"Назад\" icon={`${icons}#arrowLeft`} onClick={() => navigate(-1)} />\n                    {/* <h2 id=\"catalog\">{catalogName[catalogIdx - 1]}</h2> */}\n                    <h2 className={s.card_title}>\n                        {product.subname}: \"{product.name}\"\n                    </h2>\n\n                    <Downloader />\n                </div>\n                <div className={s.container}>\n                    <aside className={s.aside}>\n                        <ul className={s.list}>\n                            {catalog.map(({ subname, name, img, id }) => (\n                                <li key={id} className={id === productId ? s.active : s.item}>\n                                    <p className={s.category}>\n                                        {subname}: <span className={s.cardName}>{name}</span>\n                                    </p>\n                                    <img\n                                        className={s.img}\n                                        src={img}\n                                        alt=\"\"\n                                        width=\"150\"\n                                        onClick={() => chooseProduct(id)}\n                                    />\n                                </li>\n                            ))}\n                        </ul>\n                    </aside>\n                    <div className={s.cardContainer}>\n                        <div className={s.card}>\n                            <div className={s.card_wrapper}>\n                                <img\n                                    src={product.img}\n                                    alt=\"\"\n                                    width=\"600\"\n                                    ref={mainImg}\n                                    className={s.card_img}\n                                    onClick={showImg}\n                                />\n                            </div>\n                            <ul className={s.features}>\n                                {product.features.map(e => (\n                                    <li key={e} className={s.features_item}>\n                                        {e}\n                                    </li>\n                                ))}\n                                <ul className={s.card_size}>\n                                    {product.support && <li className={s.card_size_item}>\n                                        {product.support === 'square' ? 'Квадрат' : 'Диаметр'} {product.supportSize} mm\n                                    </li>}\n                                    <li className={s.card_size_item}>\n                                        {!!product.minHeight \n                                            ? `Минимальная высота:  ${product.minHeight}mm`\n                                            : ''}\n                                    </li>\n                                    <li className={s.card_size_item}>\n                                        {!!product.maxHeight \n                                            ? `Максимальная высота:  ${product.maxHeight}mm`\n                                            : ''}\n                                    </li>\n                                    <li className={s.card_size_item}>\n                                        {!!product.fastening ? `Крепление столешницы: ${product.fastening}` : ''}\n                                    </li>\n                                    <li className={s.card_size_item}>\n                                        {!!product.base  ? (\n                                            <div className={s.card_text_base}>\n                                                База:&nbsp;\n                                                {product.base?.map(e => (\n                                                    <p key={e} className={s.card_text_item}>\n                                                        {e}&nbsp;\n                                                    </p>\n                                                ))}\n                                            </div>\n                                        ) : (\n                                            ''\n                                        )}\n                                    </li>\n                                </ul>\n                               <div className={s.btn_connect}><Button text=\"Зв'язатись з нами\" onClick={showContact} /></div> \n                            </ul>\n                        </div>\n                        <ul className={s.listImg}>\n                            {product.additionalImg?.map(img => (\n                                <li key={img} className={s.itemImg}>\n                                    <img src={img} alt=\"\" width=\"150\" onClick={() => toMain(img)} />\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                {isModalShow && <Modal onClose={toggleModal} child={child} />}\n            </div>\n        )\n    );\n};\n\nexport default ProductCard;\n"],"names":["productId","useParams","useSearchParams","searchParams","useState","isModalShow","setIsModalShow","child","setChild","mainImg","useRef","navigate","useNavigate","catalogIdx","get","catalog","useSelector","state","catalogs","product","find","id","useEffect","toggleModal","console","log","className","s","text","icon","icons","onClick","subname","name","map","img","src","alt","width","replace","chooseProduct","ref","current","features","e","support","supportSize","minHeight","maxHeight","fastening","base","additionalImg","url","onClose"],"sourceRoot":""}